// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using loanRV;

namespace loanRV.Migrations
{
    [DbContext(typeof(RVContext))]
    [Migration("20191122003455_migration1")]
    partial class migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("loanRV.Amenity", b =>
                {
                    b.Property<int>("AmenityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AmenityName")
                        .IsRequired();

                    b.HasKey("AmenityId");

                    b.ToTable("Amenities");
                });

            modelBuilder.Entity("loanRV.Listing", b =>
                {
                    b.Property<int>("ListingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("Drivable");

                    b.Property<string>("Make")
                        .IsRequired();

                    b.Property<string>("Model")
                        .IsRequired();

                    b.Property<int>("OwnerId");

                    b.Property<int>("Rate");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("Year");

                    b.HasKey("ListingId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("loanRV.ListingAmenity", b =>
                {
                    b.Property<int>("ListingAmenityId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmenityId");

                    b.Property<int>("ListingId");

                    b.HasKey("ListingAmenityId");

                    b.HasIndex("AmenityId");

                    b.HasIndex("ListingId");

                    b.ToTable("ListingAmenities");
                });

            modelBuilder.Entity("loanRV.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DropOffDate");

                    b.Property<int>("ListingId");

                    b.Property<int?>("OwnerUserId");

                    b.Property<DateTime>("PickUpDate");

                    b.Property<int>("RenterId");

                    b.HasKey("RentalId");

                    b.HasIndex("ListingId");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("RenterId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("loanRV.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Confirm")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("Owner");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("Phone");

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("loanRV.Listing", b =>
                {
                    b.HasOne("loanRV.User", "Owner")
                        .WithMany("Listings")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("loanRV.ListingAmenity", b =>
                {
                    b.HasOne("loanRV.Amenity", "Amenity")
                        .WithMany("RvsHave")
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("loanRV.Listing", "Listing")
                        .WithMany("Amenities")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("loanRV.Rental", b =>
                {
                    b.HasOne("loanRV.Listing")
                        .WithMany("RentHistory")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("loanRV.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUserId");

                    b.HasOne("loanRV.User", "Renter")
                        .WithMany()
                        .HasForeignKey("RenterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
